{"version":3,"sources":["js/countdown-timer.js","js/timer.js","index.js"],"names":["CountdownTimer","selector","targetDate","deltaTime","time","start","currentTime","Date","now","getTimeComponents","clockInterface","days","hours","mins","secs","document","querySelectorAll","forEach","event","dataset","value","textContent","pad","Math","floor","String","padStart","timer"],"mappings":";;;AAAaA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAN,MAAMA,EACG,aAAA,SAAEC,EAAF,WAAYC,IACfA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EACXE,KAAAA,UACAC,KAAAA,KACAC,KAAAA,QAGD,QACQ,YAAA,KACFC,MAAAA,EAAcC,KAAKC,MACpBL,KAAAA,UAAY,KAAKD,WAAaI,EAC9BF,KAAAA,KAAO,KAAKK,kBAAkB,KAAKN,WACnCO,KAAAA,eAAe,KAAKN,OAC1B,KAGQ,gBAAA,KAAEO,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,IACfC,SAASC,oBAAoB,KAAKf,mBAExCgB,QAAQC,IACPA,OAAAA,EAAMC,QAAQC,OACb,IAAA,OACKC,EAAAA,YAAcV,EACpB,MACC,IAAA,QACKU,EAAAA,YAAcT,EACpB,MACC,IAAA,OACKS,EAAAA,YAAcR,EACpB,MACC,IAAA,OACKQ,EAAAA,YAAcP,KAMlBV,kBAAAA,GAYP,MAAA,CAAEO,KAXI,KAAKW,IAAIC,KAAKC,MAAMpB,EAAQ,QAW1BQ,MATD,KAAKU,IACfC,KAAKC,MAAOpB,EAAQ,MAAyB,OAQ3BS,KALT,KAAKS,IACdC,KAAKC,MAAOpB,EAAQ,KAAoB,MAIhBU,KADf,KAAKQ,IAAIC,KAAKC,MAAOpB,EAAQ,IAAc,OAIxDgB,IAAAA,GACOK,OAAAA,OAAOL,GAAOM,SAAS,EAAG,MAvD5B1B,QAAAA,eAAAA;;ACOb,aAPA,IAAA,EAAA,QAAA,qBAEA,MAAM2B,EAAQ,IAAI3B,EAAJ,eAAmB,CACnB,SAAA,WACE,WAAA,IAAIO,KAAK,4BAGzBoB,EAAMtB;;ACNN,aADA,QAAA,oBACA,QAAA","file":"src.88a74f23.map","sourceRoot":"../src","sourcesContent":["export class CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n        this.deltaTime;\n        this.time;\n        this.start();\n    }\n\n    start() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            this.deltaTime = this.targetDate - currentTime;\n            this.time = this.getTimeComponents(this.deltaTime);\n            this.clockInterface(this.time);\n        }, 1000);\n    }\n\n    clockInterface({ days, hours, mins, secs }) {\n        let timerValue = document.querySelectorAll(`${this.selector} .value`);\n\n        timerValue.forEach(event => {\n            switch (event.dataset.value) {\n                case 'days':\n                    event.textContent = days;\n                    break;\n                case 'hours':\n                    event.textContent = hours;\n                    break;\n                case 'mins':\n                    event.textContent = mins;\n                    break;\n                case 'secs':\n                    event.textContent = secs;\n                    break;\n            }\n        });\n    }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n\n        const hours = this.pad(\n            Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n        );\n\n        const mins = this.pad(\n            Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)),\n        );\n\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n        return { days, hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n}\n","import { CountdownTimer } from './countdown-timer';\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Dec 31, 2021, 23:59:00'),\n});\n\ntimer.start();\n","import './sass/main.scss';\nimport './js/timer';\n"]}