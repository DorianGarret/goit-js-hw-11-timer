{"version":3,"sources":["js/countdown-timer.js","js/timer.js","index.js"],"names":["CountdownTimer","selector","targetDate","clockInterface","getTimeComponents","Date","now","days","hours","mins","secs","document","querySelectorAll","forEach","event","dataset","value","textContent","time","pad","Math","floor","String","padStart","timer","start"],"mappings":";;;AAAaA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAN,MAAMA,EACG,aAAA,SAAEC,EAAF,WAAYC,IACfA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EAGZ,QACQ,YAAA,KACHE,KAAAA,eACD,KAAKC,kBAAkB,KAAKF,WAAaG,KAAKC,SAEnD,KAGQ,gBAAA,KAAEC,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,IACfC,SAASC,oBAAoB,KAAKX,mBAExCY,QAAQC,IACPA,OAAAA,EAAMC,QAAQC,OACb,IAAA,OACKC,EAAAA,YAAcV,EACpB,MACC,IAAA,QACKU,EAAAA,YAAcT,EACpB,MACC,IAAA,OACKS,EAAAA,YAAcR,EACpB,MACC,IAAA,OACKQ,EAAAA,YAAcP,KAMlBQ,kBAAAA,GAYP,MAAA,CAAEX,KAXI,KAAKY,IAAIC,KAAKC,MAAMH,EAAQ,QAW1BV,MATD,KAAKW,IACfC,KAAKC,MAAOH,EAAQ,MAAyB,OAQ3BT,KALT,KAAKU,IACdC,KAAKC,MAAOH,EAAQ,KAAoB,MAIhBR,KADf,KAAKS,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAIxDF,IAAAA,GACOM,OAAAA,OAAON,GAAOO,SAAS,EAAG,MAnD5BvB,QAAAA,eAAAA;;ACOb,aAPA,IAAA,EAAA,QAAA,qBAEA,MAAMwB,EAAQ,IAAIxB,EAAJ,eAAmB,CACnB,SAAA,WACE,WAAA,IAAIK,KAAK,4BAGzBmB,EAAMC;;ACNN,aADA,QAAA,oBACA,QAAA","file":"src.c957c3ed.map","sourceRoot":"../src","sourcesContent":["export class CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n    }\n\n    start() {\n        setInterval(() => {\n            this.clockInterface(\n                this.getTimeComponents(this.targetDate - Date.now()),\n            );\n        }, 1000);\n    }\n\n    clockInterface({ days, hours, mins, secs }) {\n        let timerValue = document.querySelectorAll(`${this.selector} .value`);\n\n        timerValue.forEach(event => {\n            switch (event.dataset.value) {\n                case 'days':\n                    event.textContent = days;\n                    break;\n                case 'hours':\n                    event.textContent = hours;\n                    break;\n                case 'mins':\n                    event.textContent = mins;\n                    break;\n                case 'secs':\n                    event.textContent = secs;\n                    break;\n            }\n        });\n    }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n\n        const hours = this.pad(\n            Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n        );\n\n        const mins = this.pad(\n            Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)),\n        );\n\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n        return { days, hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n}\n","import { CountdownTimer } from './countdown-timer';\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Dec 31, 2021, 23:59:00'),\n});\n\ntimer.start();\n","import './sass/main.scss';\nimport './js/timer';\n"]}